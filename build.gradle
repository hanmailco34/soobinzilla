buildscript {
    ext {
        springBootVersion = '2.7.18'
        persistenceVerion = '2.2'
        mariadbVersion = '3.0.8'
        queryDslVersion = '5.0.0'
        jacksonVersion = '2.12.3'
    }
    repositories {
    	mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.soobin'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

configurations {
	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
	
	implementation 'org.springframework.boot:spring-boot-starter-web'
    
    implementation 'org.springframework.boot:spring-boot-starter-security'
    
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    
    implementation "org.mariadb.jdbc:mariadb-java-client:${mariadbVersion}"
    
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "javax.persistence:javax.persistence-api:${persistenceVerion}"
    
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-core:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"
    
    implementation 'com.google.guava:guava:31.0.1-jre'
    
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api:2.2.3'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api:1.3.5'
    
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    
    implementation 'commons-net:commons-net:3.3'
    implementation 'com.github.mwiede:jsch:0.2.17'
    implementation 'com.hierynomus:smbj:0.13.0'    
    implementation 'org.bouncycastle:bcprov-jdk18on:1.78.1'
    runtimeOnly 'com.hierynomus:asn-one:0.6.0'
    
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
}

def querydslDir = "src/main/generated"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslDir]
        }
    }
}

configurations {
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
    source querydslDir
}

bootJar {
    enabled = false
}
